[{"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\index.js":"1","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\store.js":"2","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\serviceWorker.js":"3","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\App.js":"4","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\user.component.js":"5","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\actions\\message.js":"6","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\common\\EventBus.js":"7","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\helpers\\history.js":"8","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\login.component.js":"9","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\profile.component.js":"10","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\register.component.js":"11","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\EmployeeListUser.js":"12","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\AddEmployee.js":"13","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\adminDashboard.component.js":"14","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\SideNavbar.js":"15","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\actions\\auth.js":"16","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\UpdateEmployee.js":"17","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\ViewEmployee.js":"18","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\AttendanceList.js":"19","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\UpdateAttendance.js":"20","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\MarkAttendance.js":"21","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\SingleEmpAttendance.js":"22","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\UserComponents\\EmployeeHome.js":"23","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\EmployeeList.js":"24","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\PendingList.js":"25","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\UserComponents\\HrHome.js":"26","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\LeaveTypeList.js":"27","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\LeaveTypeListUsers.js":"28","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\AddLeaveType.js":"29","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\UpdateLeaveType.js":"30","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\reducers\\index.js":"31","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestComp\\LeaveRequestList.js":"32","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestCompUser\\LeaveRequestListUser.js":"33","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestCompUser\\UpdateLeaveRequestUser.js":"34","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveBalanceComp\\LeaveBalanceListUser.js":"35","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestCompUser\\AddLeaveRequestUser.js":"36","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveBalanceComp\\LeaveBalanceList.js":"37","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\TrackStatus.js":"38","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\HrJobPortal.js":"39","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\FilterByCategory.js":"40","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\Jav.js":"41","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\CustomerJobPortal.js":"42","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\actions\\types.js":"43","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\user.service.js":"44","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\reducers\\message.js":"45","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\reducers\\auth.js":"46","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\CalenderView.js":"47","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\hr.service.js":"48","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\auth.service.js":"49","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\employee.service.js":"50","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\AppliedJobs.js":"51","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\FilterByStatus.js":"52","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\FilterJob.js":"53","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\SearchJob.js":"54","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\DashBoardComponents\\SmallCalendar.js":"55","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\ViewJob.js":"56","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\dd.js":"57","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\PostJob.js":"58","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\Status.js":"59","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\AppliedJob.js":"60","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\AllJob.js":"61","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\ApplicationInfo.js":"62","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\auth-header.js":"63","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\example.js":"64","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\FilterHrJob.js":"65","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\JobDetails.js":"66","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\AllApplication.js":"67","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\JobInfo.js":"68","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\DashBoardComponents\\ProfileNavigationItem.js":"69"},{"size":379,"mtime":1691140495811,"results":"70","hashOfConfig":"71"},{"size":354,"mtime":1691140495811,"results":"72","hashOfConfig":"71"},{"size":5227,"mtime":1691140495811,"results":"73","hashOfConfig":"71"},{"size":11908,"mtime":1692773359810,"results":"74","hashOfConfig":"71"},{"size":1238,"mtime":1691140495811,"results":"75","hashOfConfig":"71"},{"size":217,"mtime":1691140495796,"results":"76","hashOfConfig":"71"},{"size":340,"mtime":1691140495796,"results":"77","hashOfConfig":"71"},{"size":99,"mtime":1691140495811,"results":"78","hashOfConfig":"71"},{"size":6074,"mtime":1692686093454,"results":"79","hashOfConfig":"71"},{"size":2401,"mtime":1692686093458,"results":"80","hashOfConfig":"71"},{"size":6551,"mtime":1692686093460,"results":"81","hashOfConfig":"71"},{"size":1084,"mtime":1692351168435,"results":"82","hashOfConfig":"71"},{"size":10956,"mtime":1692351168426,"results":"83","hashOfConfig":"71"},{"size":1414,"mtime":1692686093449,"results":"84","hashOfConfig":"71"},{"size":4759,"mtime":1692768718765,"results":"85","hashOfConfig":"71"},{"size":1780,"mtime":1692686093383,"results":"86","hashOfConfig":"71"},{"size":13291,"mtime":1692686093411,"results":"87","hashOfConfig":"71"},{"size":3423,"mtime":1692686093413,"results":"88","hashOfConfig":"71"},{"size":4145,"mtime":1692686093393,"results":"89","hashOfConfig":"71"},{"size":3428,"mtime":1692686093403,"results":"90","hashOfConfig":"71"},{"size":2862,"mtime":1692686093394,"results":"91","hashOfConfig":"71"},{"size":6052,"mtime":1692687229609,"results":"92","hashOfConfig":"71"},{"size":407,"mtime":1692686093443,"results":"93","hashOfConfig":"71"},{"size":7457,"mtime":1692686093408,"results":"94","hashOfConfig":"71"},{"size":4028,"mtime":1692686093396,"results":"95","hashOfConfig":"71"},{"size":3111,"mtime":1692686093447,"results":"96","hashOfConfig":"71"},{"size":4316,"mtime":1692351168459,"results":"97","hashOfConfig":"71"},{"size":1525,"mtime":1691728496732,"results":"98","hashOfConfig":"71"},{"size":2720,"mtime":1692351168459,"results":"99","hashOfConfig":"71"},{"size":3520,"mtime":1692351168469,"results":"100","hashOfConfig":"71"},{"size":166,"mtime":1691140495811,"results":"101","hashOfConfig":"71"},{"size":10654,"mtime":1692686093423,"results":"102","hashOfConfig":"71"},{"size":8748,"mtime":1692768718758,"results":"103","hashOfConfig":"71"},{"size":10360,"mtime":1692768718760,"results":"104","hashOfConfig":"71"},{"size":3795,"mtime":1692686093419,"results":"105","hashOfConfig":"71"},{"size":8894,"mtime":1692768718755,"results":"106","hashOfConfig":"71"},{"size":4038,"mtime":1692686093416,"results":"107","hashOfConfig":"71"},{"size":923,"mtime":1692270194399,"results":"108","hashOfConfig":"71"},{"size":913,"mtime":1692773951430,"results":"109","hashOfConfig":"71"},{"size":3376,"mtime":1692333494273,"results":"110","hashOfConfig":"71"},{"size":818,"mtime":1691951387710,"results":"111","hashOfConfig":"71"},{"size":1512,"mtime":1692341044709,"results":"112","hashOfConfig":"71"},{"size":313,"mtime":1691140495796,"results":"113","hashOfConfig":"71"},{"size":358,"mtime":1692351168493,"results":"114","hashOfConfig":"71"},{"size":372,"mtime":1691140495811,"results":"115","hashOfConfig":"71"},{"size":1060,"mtime":1692355774406,"results":"116","hashOfConfig":"71"},{"size":1357,"mtime":1692351168426,"results":"117","hashOfConfig":"71"},{"size":5871,"mtime":1692773333215,"results":"118","hashOfConfig":"71"},{"size":1239,"mtime":1692686093465,"results":"119","hashOfConfig":"71"},{"size":2762,"mtime":1692768718773,"results":"120","hashOfConfig":"71"},{"size":2558,"mtime":1692341761411,"results":"121","hashOfConfig":"71"},{"size":1593,"mtime":1691832203442,"results":"122","hashOfConfig":"71"},{"size":1719,"mtime":1691831015921,"results":"123","hashOfConfig":"71"},{"size":1632,"mtime":1692289858575,"results":"124","hashOfConfig":"71"},{"size":1912,"mtime":1692686093405,"results":"125","hashOfConfig":"71"},{"size":3687,"mtime":1692774048184,"results":"126","hashOfConfig":"71"},{"size":1293,"mtime":1692337206070,"results":"127","hashOfConfig":"71"},{"size":7744,"mtime":1692685744031,"results":"128","hashOfConfig":"71"},{"size":4365,"mtime":1692774103879,"results":"129","hashOfConfig":"71"},{"size":3609,"mtime":1692773917996,"results":"130","hashOfConfig":"71"},{"size":6707,"mtime":1692343108864,"results":"131","hashOfConfig":"71"},{"size":3711,"mtime":1692773859242,"results":"132","hashOfConfig":"71"},{"size":756,"mtime":1692686093463,"results":"133","hashOfConfig":"71"},{"size":156,"mtime":1692696147804,"results":"134","hashOfConfig":"71"},{"size":2958,"mtime":1692770964678,"results":"135","hashOfConfig":"71"},{"size":1873,"mtime":1692773968293,"results":"136","hashOfConfig":"71"},{"size":1596,"mtime":1692773806920,"results":"137","hashOfConfig":"71"},{"size":2512,"mtime":1692773979686,"results":"138","hashOfConfig":"71"},{"size":2561,"mtime":1692768718750,"results":"139","hashOfConfig":"71"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},"17e78zt",{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"143"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"143"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"143"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"143"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"143"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"143"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"143"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"143"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"143"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"143"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"143"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"143"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"143"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"143"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"143"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"143"},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"143"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"143"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"143"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"143"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"143"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"143"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"143"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"143"},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\index.js",[],[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\store.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\serviceWorker.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\App.js",["373","374","375","376","377","378"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\user.component.js",["379","380","381","382"],[],"import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getGreetings().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data.message\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n\r\n        <div class=\"card bg-light text-dark\">\r\n        <h3>{this.state.content}</h3>\r\n        <a href=\"#\"><i class=\"fa fa-dribbble\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-linkedin\"></i></a>\r\n        <a href=\"#\"><i class=\"fa fa-facebook\"></i></a>\r\n          </div>\r\n     \r\n    );\r\n  }\r\n}","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\actions\\message.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\common\\EventBus.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\helpers\\history.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\login.component.js",["383"],[],"// Working code \r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { Box, Typography, InputLabel, MenuItem, TextField, FormControl, Select } from \"@mui/material\";\r\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\r\nimport \"./login.css\"; // Import the CSS file\r\n\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeErole = this.onChangeErole.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      erole: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  onChangeErole(e) {\r\n    this.setState({\r\n      erole: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    const { dispatch, history } = this.props;\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      dispatch(login(this.state.username, this.state.password, this.state.erole))\r\n        .then(() => {\r\n          if (this.state.erole === \"Admin\") {\r\n            history.push(\"/hr-home\");\r\n          } else if (this.state.erole === \"Manager\") {\r\n            history.push(\"/manager-home\");\r\n          } else if (this.state.erole === \"Employee\") {\r\n            history.push(\"/employee-home\")\r\n          } else {\r\n            alert(\"Oops! Reload and Retry!\");\r\n            history.push(\"/login\");\r\n          }\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, message } = this.props;\r\n\r\n    if (isLoggedIn) {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n      <Box>\r\n        <div className=\"login-container\">\r\n          <div className=\"login-form\">\r\n            <Typography variant=\"h4\" align=\"center\">\r\n              Login <LockOpenIcon color=\"default\" fontSize=\"large\" />\r\n            </Typography>\r\n            <br></br>\r\n            <Form\r\n              onSubmit={this.handleLogin}\r\n              ref={(c) => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n              <div className=\"form-group\">\r\n                <FormControl required variant=\"outlined\" fullWidth>\r\n                  <InputLabel required>Role</InputLabel>\r\n                  <Select\r\n                    fullWidth\r\n                    label=\"role\"\r\n                    name=\"erole\"\r\n                    value={this.state.erole}\r\n                    onChange={this.onChangeErole}\r\n                  >\r\n                    <MenuItem value=\"\">Select Role</MenuItem>\r\n                    <MenuItem value=\"Admin\">Admin</MenuItem>\r\n                    <MenuItem value=\"Manager\">Manager</MenuItem>\r\n                    <MenuItem value=\"Employee\">Employee</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChangeUsername}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <TextField\r\n                  required\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChangePassword}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n              <br></br>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  className=\"btn btn-dark btn-block\"\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )}\r\n                  <span>Login</span>\r\n                </button>\r\n              </div>\r\n\r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <CheckButton\r\n                style={{ display: \"none\" }}\r\n                ref={(c) => {\r\n                  this.checkBtn = c;\r\n                }}\r\n              />\r\n            </Form>\r\n          </div>\r\n          <div className=\"login-bg\">\r\n            <img src=\"./bg.png\"></img>\r\n          </div>\r\n        </div>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { isLoggedIn } = state.auth;\r\n  const { message } = state.message;\r\n  return {\r\n    isLoggedIn,\r\n    message\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Login);","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\profile.component.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\register.component.js",["384","385","386"],[],"import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { Container, Typography, TextField, Button, CircularProgress, Snackbar, Card, MenuItem, FormControl, InputLabel, Select } from \"@mui/material\";\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport Alert from '@mui/material/Alert';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../actions/auth\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return \"This field is required!\";\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return \"This is not a valid email.\";\r\n  }\r\n};\r\n\r\nconst vusername = (value) => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return \"The username must be between 3 and 20 characters.\";\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return \"The password must be between 6 and 40 characters.\";\r\n  }\r\n};\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n  margin: \"auto\",\r\n  marginTop: theme.spacing(8),\r\n  padding: theme.spacing(4),\r\n  textAlign: \"center\",\r\n  boxShadow: \"0px 3px 10px rgba(0, 0, 0, 0.2)\",\r\n}));\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeRole = this.onChangeRole.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      role: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  onChangeRole(e) {\r\n    this.setState({\r\n      role: e.target.value,\r\n    });\r\n  }\r\n\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      this.props\r\n        .dispatch(\r\n          register(this.state.role, this.state.username, this.state.email, this.state.password)\r\n        )\r\n        .then(() => {\r\n          this.setState({\r\n            successful: true,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            successful: false,\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n\r\n      <div>\r\n\r\n        <StyledCard>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            User Registration <PersonAddIcon color=\"default\" fontSize=\"large\" />\r\n          </Typography>\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <FormControl required variant=\"outlined\" fullWidth margin=\"dense\">\r\n                  <InputLabel>Role</InputLabel>\r\n                  <Select\r\n                    name=\"role\"\r\n                    onChange={(e) => {\r\n                      this.onChangeRole(e);\r\n                      this.setState({ role: e.target.value });\r\n                    }}\r\n                    value={this.state.role}\r\n                    label=\"Role\"\r\n                  >\r\n                    <MenuItem value=\"\">Select Role</MenuItem>\r\n                    <MenuItem value=\"Admin\">Admin</MenuItem>\r\n                    <MenuItem value=\"Manager\">Manager</MenuItem>\r\n                    <MenuItem value=\"Employee\">Employee</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChangeUsername}\r\n                  error={message}\r\n                  validations={[required, vusername]}\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChangeEmail}\r\n                  error={message}\r\n                  validations={[required, email]}\r\n                />\r\n\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChangePassword}\r\n                  error={message}\r\n                  validations={[required, vpassword]}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={this.state.loading}\r\n                  style={{ marginTop: \"16px\", backgroundColor: 'black', color: 'white' }}\r\n                >\r\n                  {this.state.loading ? <CircularProgress size={24} /> : \"Sign Up\"}\r\n                </Button>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div style={{ marginTop: \"16px\" }}>\r\n                <Alert severity={this.state.successful ? \"success\" : \"error\"}>\r\n                  {message}\r\n                </Alert>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </StyledCard>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  return {\r\n    message,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\EmployeeListUser.js",["387","388","389","390"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport HrService from \"../../services/hr.service\";\r\n\r\nfunction EmployeeListUser(props) {\r\n  const [employees, setEmployees] = useState([]);\r\n  const { user: currentUser } = props;\r\n\r\n  useEffect(() => {\r\n    console.log(currentUser);\r\n    // if (currentUser && currentUser.employeeId) {\r\n    //   // Use currentUser.employeeId to identify the user's employeeId\r\n    //   HrService.getEmployeeById(currentUser.employeeId)\r\n    //     .then((response) => {\r\n    //       console.log(\"Employee data:\", response.data);\r\n    //       console.log(currentUser);\r\n    //       setEmployees(response.data);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.log(error);\r\n    //     });\r\n    // }\r\n  }, [currentUser]);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee List for a particular user</h1>\r\n      {/* Render the list of employees here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeListUser;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\AddEmployee.js",["391"],[],"import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport HrService from \"../../services/hr.service\";\r\nimport {\r\n    Card, CardContent, CardHeader, TextField, Button, Grid, Box, MenuItem, FormControl, InputLabel, Select,\r\n} from \"@mui/material\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { DatePicker } from '@mui/lab/DatePicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nfunction AddEmployee(props) {\r\n    const [employee, setEmployee] = useState({});\r\n    const [addSuccess, setAddSuccess] = useState(false);\r\n    const { user: currentUser } = props;\r\n\r\n    // Validate email format\r\n    function isValidEmail(email) {\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return regex.test(email);\r\n    }\r\n\r\n    const handleFieldChange = (fieldName, value) => {\r\n        setEmployee((prevEmployee) => ({\r\n            ...prevEmployee,\r\n            [fieldName]: value,\r\n        }));\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        // Validate the phone number\r\n        if (employee.phoneNumber && employee.phoneNumber.length !== 10) {\r\n            alert(\"Phone number must be 10 digits.\");\r\n            return;\r\n        }\r\n\r\n        // Validate email format\r\n        if (employee.email && !isValidEmail(employee.email)) {\r\n            alert(\"Invalid email format.\");\r\n            return;\r\n        }\r\n\r\n        HrService.saveEmployee(employee)\r\n            .then(() => {\r\n                setAddSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error adding employee:\", error);\r\n            });\r\n\r\n    };\r\n\r\n    if (addSuccess) {\r\n        return <Redirect to=\"/employee-list\" />;\r\n    }\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader className=\"title\" title=\"Add New Employee\" />\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"First Name\"\r\n                                value={employee.fname || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"fname\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Last Name\"\r\n                                value={employee.lname || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"lname\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel>Gender</InputLabel>\r\n                                <Select\r\n                                    label=\"Gender\"\r\n                                    value={employee.gender || \"\"}\r\n                                    onChange={(e) => handleFieldChange(\"gender\", e.target.value)}\r\n                                >\r\n                                    <MenuItem value=\"Female\">Female</MenuItem>\r\n                                    <MenuItem value=\"Male\">Male</MenuItem>\r\n                                    <MenuItem value=\"Other\">Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Date of Birth\"\r\n                                type=\"date\"\r\n                                value={employee.dob || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"dob\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Department\"\r\n                                value={employee.department || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"department\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                value={employee.email || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"email\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Phone No\"\r\n                                value={employee.phoneNumber || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"phoneNumber\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Date of Joining\"\r\n                                type=\"date\"\r\n                                value={employee.doJoining || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"doJoining\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Job Title\"\r\n                                value={employee.jobTitle || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"jobTitle\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Address\"\r\n                                value={employee.address || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"address\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Permanent Address\"\r\n                                value={employee.paddress || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"paddress\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Addhar/Pan Card number\"\r\n                                value={employee.idNo || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"idNo\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel>Employee Status</InputLabel>\r\n                                <Select\r\n                                    value={employee.employeeStatus || \"\"}\r\n                                    onChange={(e) =>\r\n                                        handleFieldChange(\"employeeStatus\", e.target.value)\r\n                                    }\r\n                                    label=\"Employee Status\"\r\n                                >\r\n                                    <MenuItem value=\"Active\">Active</MenuItem>\r\n                                    <MenuItem value=\"InActive\">InActive</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Date of Leaving\"\r\n                                type=\"date\"\r\n                                value={employee.doLeaving || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"doLeaving\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Employee Picture\"\r\n                                value={employee.employeePic || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"employeePic\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Resume\"\r\n                                value={employee.resume || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"resume\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<Add />}\r\n                            onClick={handleAdd}\r\n                        >\r\n                            Add Employee\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddEmployee;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\adminDashboard.component.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\SideNavbar.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\actions\\auth.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\UpdateEmployee.js",["392"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link, useParams } from \"react-router-dom\";\r\nimport HrService from \"../../services/hr.service\";\r\nimport {\r\n    Card, CardContent, CardHeader, TextField, Button, Grid, Box, MenuItem, FormControl, InputLabel, Select,\r\n} from \"@mui/material\";\r\nimport { Update } from \"@mui/icons-material\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nfunction UpdateEmployee(props) {\r\n    const [employee, setEmployee] = useState({});\r\n    const { employeeId } = useParams();\r\n    const [updateSuccess, setUpdateSuccess] = useState(false);\r\n    const { user: currentUser } = props;\r\n\r\n    useEffect(() => {\r\n        HrService.getEmployeeById(employeeId)\r\n            .then((response) => {\r\n                console.log(\"Employee data:\", response.data);\r\n                setEmployee(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }, [employeeId]);\r\n\r\n    // Validate email format\r\n    function isValidEmail(email) {\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return regex.test(email);\r\n    }\r\n\r\n    const handleFieldChange = (fieldName, value) => {\r\n        setEmployee((prevEmployee) => ({\r\n            ...prevEmployee,\r\n            [fieldName]: value,\r\n        }));\r\n    };\r\n\r\n    const handleUpdate = () => {\r\n        // Validate the phone number\r\n        if (employee.phoneNumber && employee.phoneNumber.length !== 10) {\r\n            alert(\"Phone number must be 10 digits.\");\r\n            return;\r\n        }\r\n\r\n        // Validate email format\r\n        if (employee.email && !isValidEmail(employee.email)) {\r\n            alert(\"Invalid email format.\");\r\n            return;\r\n        }\r\n\r\n        HrService.updateEmployee(employeeId, employee)\r\n            .then(() => {\r\n                setUpdateSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error updating employee:\", error);\r\n            });\r\n    };\r\n\r\n    if (updateSuccess) {\r\n        return <Redirect to=\"/employee-list\" />;\r\n    }\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader className=\"title\" title=\"Employee Details\" />\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"User Id\"\r\n                                value={employee.userId || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"userId\", e.target.value)}\r\n                                fullWidth\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Email\"\r\n                                value={employee.email || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"email\", e.target.value)}\r\n                                fullWidth\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Username\"\r\n                                value={employee.username || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"username\", e.target.value)}\r\n                                fullWidth\r\n                                disabled\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"First Name\"\r\n                                value={employee.fname || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"fname\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Last Name\"\r\n                                value={employee.lname || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"lname\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel>Gender</InputLabel>\r\n                                <Select\r\n                                    label=\"Gender\"\r\n                                    value={employee.gender || \"\"}\r\n                                    onChange={(e) => handleFieldChange(\"gender\", e.target.value)}\r\n                                >\r\n                                    <MenuItem value=\"Female\">Female</MenuItem>\r\n                                    <MenuItem value=\"Male\">Male</MenuItem>\r\n                                    <MenuItem value=\"Other\">Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Date of Birth\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                value={employee.dob || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"dob\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Department\"\r\n                                value={employee.department || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"department\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Phone No\"\r\n                                value={employee.phoneNumber || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"phoneNumber\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Date of Joining\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                value={employee.doJoining || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"doJoining\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Job Title\"\r\n                                value={employee.jobTitle || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"jobTitle\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Address\"\r\n                                value={employee.address || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"address\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Permanent Address\"\r\n                                value={employee.paddress || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"paddress\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Addhar ID\"\r\n                                value={employee.idNo || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"idNo\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Pan Card number\"\r\n                                value={employee.other || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"other\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel>Employee Status</InputLabel>\r\n                                <Select\r\n                                    value={employee.employeeStatus || \"\"}\r\n                                    onChange={(e) =>\r\n                                        handleFieldChange(\"employeeStatus\", e.target.value)\r\n                                    }\r\n                                    label=\"Employee Status\"\r\n                                >\r\n                                    <MenuItem value=\"Active\">Active</MenuItem>\r\n                                    <MenuItem value=\"InActive\">InActive</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Date of Leaving\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                value={employee.doLeaving || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"doLeaving\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Employee Picture\"\r\n                                value={employee.employeePic || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"employeePic\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Resume\"\r\n                                value={employee.resume || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"resume\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<Update />}\r\n                            onClick={handleUpdate}\r\n                        >\r\n                            Update\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateEmployee;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\ViewEmployee.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\AttendanceList.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\UpdateAttendance.js",["393"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport {TextField, Button, Box, Card, CardContent, CardActions, CardHeader} from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Done } from '@mui/icons-material';\r\n\r\nimport HrService from '../../services/hr.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor:'lightgrey',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor: 'primary',\r\n    color: '#fff',\r\n  },\r\n  inputField: {\r\n    marginBottom: '16px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction UpdateAttendance(props) {\r\n  const { user: currentUser } = props;\r\n  const { attendanceId, employeeId } = useParams();\r\n  const [attendance, setAttendance] = useState({});\r\n  const [present, setPresent] = useState('');\r\n  const [absenceReason, setAbsenceReason] = useState('');\r\n  const [redirectToList, setRedirectToList] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    HrService.getAttendanceByEmployeeId(employeeId)\r\n      .then((response) => {\r\n        const attendanceData = response.data;\r\n        setAttendance(attendanceData);\r\n        setPresent(attendanceData.present);\r\n        setAbsenceReason(attendanceData.absenceReason);\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error fetching data', error);\r\n      });\r\n  }, [employeeId]);\r\n\r\n  const handleUpdateAttendance = () => {\r\n    const updatedAttendance = {\r\n      attendanceId,\r\n      present: present,\r\n      absenceReason: absenceReason,\r\n    };\r\n\r\n    HrService.updateAttendance(attendanceId, updatedAttendance)\r\n      .then((response) => {\r\n        console.log('Attendance updated successfully', response.data);\r\n        setRedirectToList(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error updating data', error);\r\n      });\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n  if (redirectToList) {\r\n    return <Redirect to=\"/attendance-list\" />;\r\n  }\r\n\r\n  return (\r\n    \r\n      <div>\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            title={`Update Attendance `}\r\n          />\r\n          <hr />\r\n          <CardContent>\r\n            <Box textAlign='center' margin={1}>\r\n              <TextField\r\n                label=\"Present\"\r\n                variant='outlined'\r\n                color='primary'\r\n                value={present}\r\n                onChange={(e) => setPresent(e.target.value)}\r\n                className={classes.inputField}\r\n              />\r\n              <TextField\r\n                label=\"Absence Reason\"\r\n                variant='outlined'\r\n                color='primary'\r\n                value={absenceReason}\r\n                onChange={(e) => setAbsenceReason(e.target.value)}\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Box  className={classes.buttonContainer}>\r\n              <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                startIcon={<Done />}\r\n                onClick={handleUpdateAttendance}\r\n              >\r\n                Update Attendance\r\n              </Button>\r\n            </Box>\r\n          </CardActions>\r\n        </Card>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default UpdateAttendance;\r\n\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\MarkAttendance.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\SingleEmpAttendance.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\UserComponents\\EmployeeHome.js",["394"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nfunction EmployeeHome(props) {\r\n  const { user: currentUser } = props;\r\n\r\n\r\n  useEffect(() => {\r\n  }, []);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Hello employee with employee ID</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeHome;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\EmployeeComponents\\EmployeeList.js",["395","396"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport HrService from \"../../services/hr.service\";\r\nimport {\r\n  Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Box, Card, CardContent,\r\n  CardActions, CardHeader, Dialog, DialogTitle, DialogContent, DialogActions, TextField, InputAdornment, Grid\r\n} from \"@mui/material\";\r\nimport { Delete, Create, AddCircleOutline, Search } from '@mui/icons-material';\r\nimport Pagination from '@mui/material/Pagination';\r\n\r\nfunction EmployeeList(props) {\r\n  const [employees, setEmployees] = useState([]);\r\n  const { user: currentUser } = props;\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n\r\n  const employeesPerPage = 4;\r\n  const totalPageCount = Math.ceil(employees.length / employeesPerPage);\r\n\r\n  useEffect(() => {\r\n    HrService.getAllEmployees()\r\n      .then((response) => {\r\n        console.log(\"Employee data:\", response.data);\r\n        setEmployees(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDeleteClick = (employee) => {\r\n    setSelectedEmployee(employee);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteConfirm = () => {\r\n    if (selectedEmployee) {\r\n      HrService.deleteEmployee(selectedEmployee.employeeId)\r\n        .then(() => {\r\n          setEmployees(employees.filter((emp) => emp.employeeId !== selectedEmployee.employeeId));\r\n          setSelectedEmployee(null);\r\n          setDeleteDialogOpen(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Error deleting employee:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleDeleteCancel = () => {\r\n    setSelectedEmployee(null);\r\n    setDeleteDialogOpen(false);\r\n  };\r\n\r\n  const handlePageChange = (event, value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  const filteredEmployees = employees.filter((employee) =>\r\n    employee.fname?.toLowerCase().includes(searchKeyword.toLowerCase()) ||\r\n    employee.lname?.toLowerCase().includes(searchKeyword.toLowerCase()) ||\r\n    employee.department?.toLowerCase().includes(searchKeyword.toLowerCase()) ||\r\n    employee.email?.toLowerCase().includes(searchKeyword.toLowerCase()) ||\r\n    employee.username?.toLowerCase().includes(searchKeyword.toLowerCase())\r\n  );\r\n\r\n  const indexOfLastEmployee = currentPage * employeesPerPage;\r\n  const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\r\n  const currentEmployees = filteredEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardHeader className=\"title\" title=\"Employee List\" />\r\n        <CardContent>\r\n          <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={4}></Grid>\r\n          <Grid item xs={4}></Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                label=\"Search\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                value={searchKeyword}\r\n                onChange={(e) => setSearchKeyword(e.target.value)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br></br>\r\n          <TableContainer component={Paper} style={{ width: \"100%\" }}>\r\n            <Table stickyHeader>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>ID</TableCell>\r\n                  <TableCell>First Name</TableCell>\r\n                  <TableCell>Last Name</TableCell>\r\n                  <TableCell>Department</TableCell>\r\n                  <TableCell>Email</TableCell>\r\n                  <TableCell>Username</TableCell>\r\n                  <TableCell width={\"20px\"}>Employee Status</TableCell>\r\n                  <TableCell width={\"220px\"}>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {currentEmployees.map((employee) => (\r\n                  <TableRow key={employee.employeeId}>\r\n                    <TableCell>{employee.employeeId}</TableCell>\r\n                    <TableCell>{employee.fname ? employee.fname : \"N/A\"}</TableCell>\r\n                    <TableCell>{employee.lname ? employee.lname : \"N/A\"}</TableCell>\r\n                    <TableCell>{employee.department ? employee.department : \"N/A\"}</TableCell>\r\n                    <TableCell>{employee.email ? employee.email : \"N/A\"}</TableCell>\r\n                    <TableCell>{employee.username ? employee.username : \"N/A\"}</TableCell>\r\n                    <TableCell>{employee.employeeStatus ? employee.employeeStatus : \"N/A\"}</TableCell>\r\n\r\n                    <TableCell>\r\n                      <Link to={`/update-employee/${employee.employeeId}`}>\r\n                        <Button style={{ marginBottom: \"10px\" }} variant=\"outlined\" startIcon={<Create />}>Edit</Button>\r\n                      </Link>\r\n                      &nbsp;\r\n                      <Link to={`/view-employee/${employee.employeeId}`}>\r\n                        <Button color=\"success\" style={{ marginBottom: \"10px\" }} variant=\"outlined\" startIcon={<Create />}>View</Button>\r\n                      </Link>\r\n                      {/* <Button variant=\"outlined\" color=\"error\" startIcon={<Delete />} onClick={() => handleDeleteClick(employee)}>\r\n                        Delete\r\n                      </Button> */}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <br />\r\n          <CardActions>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n            <Box>\r\n              <Link to=\"/register\">\r\n                <Button variant=\"outlined\" color=\"success\" startIcon={<AddCircleOutline />}>Register New Employee</Button>\r\n              </Link>\r\n            &nbsp;\r\n              <Link to=\"/add-employee\">\r\n                <Button variant=\"outlined\" color=\"success\" startIcon={<AddCircleOutline />}>Add New Employee</Button>\r\n              </Link>\r\n              </Box>\r\n              <Box>\r\n                <Pagination count={totalPageCount} page={currentPage} onChange={handlePageChange} color=\"primary\" />\r\n              </Box>\r\n            </Box>\r\n          </CardActions>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Dialog open={deleteDialogOpen}>\r\n        <DialogTitle>Delete Employee</DialogTitle>\r\n        <DialogContent>\r\n          Are you sure you want to delete this Employee?\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteCancel} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteConfirm} color=\"error\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeList;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\Attendancecomponents\\PendingList.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\UserComponents\\HrHome.js",["397","398","399"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  CircularProgress,\r\n  Box,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport HrService from \"../../services/hr.service\";\r\nimport SmallCalendar from \"../DashBoardComponents/SmallCalendar\";\r\n\r\nfunction HrHome(props) {\r\n  const { user: currentUser } = props;\r\n  const [leaveRequests, setLeaveRequests] = useState([]);\r\n  const [attendancePercentage, setAttendancePercentage] = useState(85); // Sample data\r\n  const [notificationOpen, setNotificationOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    HrService.getAllLeaveRequests()\r\n      .then((response) => {\r\n        setLeaveRequests(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleNotificationClose = () => {\r\n    setNotificationOpen(false);\r\n  };\r\n\r\n  const handleNotificationOpen = () => {\r\n    setNotificationOpen(true);\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Notification Bar */}\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"flex-end\"\r\n        p={2}\r\n        position=\"fixed\"\r\n        width=\"100%\"\r\n        zIndex={100}\r\n      >\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"notification\"\r\n          onClick={handleNotificationOpen}\r\n        >\r\n          <NotificationsIcon />\r\n        </IconButton>\r\n      </Box>\r\n      <Divider />\r\n      {/* Notification Content */}\r\n      {notificationOpen && (\r\n        <Box p={2} bgcolor=\"lightgrey\" zIndex={99}>\r\n          This is a sample notification.\r\n        </Box>\r\n      )}\r\n      <Divider />\r\n      <Grid container spacing={4}>\r\n        {/* Small Calendar */}\r\n        <Grid item xs={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Calendar\r\n              </Typography>\r\n              <SmallCalendar leaveRequests={leaveRequests} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        {/* Attendance */}\r\n        <Grid item xs={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Attendance\r\n              </Typography>\r\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n                <CircularProgress\r\n                  variant=\"determinate\"\r\n                  value={attendancePercentage}\r\n                  size={100}\r\n                  thickness={6}\r\n                />\r\n                &nbsp;&nbsp;\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {attendancePercentage}% Attendance\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HrHome;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\LeaveTypeList.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\LeaveTypeListUsers.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\AddLeaveType.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\TypeComp\\UpdateLeaveType.js",["400"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport HrService from \"../../../services/hr.service\";\r\nimport { TextField, Button, Box, Card, CardContent, CardActions, CardHeader } from \"@mui/material\";\r\nimport { Done } from \"@mui/icons-material\";\r\n\r\nfunction UpdateLeaveType(props) {\r\n    const { user: currentUser } = props;\r\n    const { typeId } = useParams();\r\n    const [leaveType, setLeaveType] = useState({});\r\n    const [leaveTypeName, setLeaveTypeName] = useState(\"\");\r\n    const [leaveTypeAllowedCount, setLeaveTypeAllowedCount] = useState(0);\r\n    const [redirectToList, setRedirectToList] = useState(false);\r\n\r\n    useEffect(() => {\r\n        HrService.getLeaveTypeById(typeId)\r\n            .then((response) => {\r\n                const leaveTypeData = response.data;\r\n                setLeaveType(leaveTypeData);\r\n                setLeaveTypeName(leaveTypeData.typeName);\r\n                setLeaveTypeAllowedCount(leaveTypeData.countAllowed);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error fetching leave type details:\", error);\r\n            });\r\n    }, [typeId]);\r\n\r\n    const handleUpdateLeaveType = () => {\r\n        const updatedLeaveType = {\r\n            typeId: leaveType.typeId,\r\n            typeName: leaveTypeName,\r\n            countAllowed: leaveTypeAllowedCount,\r\n        };\r\n\r\n        HrService.updateLeaveType(leaveType.typeId, updatedLeaveType)\r\n            .then((response) => {\r\n                setRedirectToList(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error updating leave type:\", error);\r\n            });\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    if (redirectToList) {\r\n        return <Redirect to=\"/leave-types\" />;\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader title={`Update Leave Type - ${leaveType.typeName}`} />\r\n                <CardContent>\r\n                    <form>\r\n                        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                            <TextField\r\n                                label=\"Leave Type Name\"\r\n                                variant=\"outlined\"\r\n                                value={leaveTypeName}\r\n                                onChange={(e) => setLeaveTypeName(e.target.value)}\r\n                                style={{ marginBottom: \"20px\" }}\r\n                            />\r\n                            <TextField\r\n                                label=\"Allowed Count\"\r\n                                type=\"number\"\r\n                                variant=\"outlined\"\r\n                                value={leaveTypeAllowedCount}\r\n                                onChange={(e) => setLeaveTypeAllowedCount(e.target.value)}\r\n                                style={{ marginBottom: \"20px\" }}\r\n                            />\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"success\"\r\n                                startIcon={<Done />}\r\n                                onClick={handleUpdateLeaveType}\r\n                            >\r\n                                Update Leave Type\r\n                            </Button>\r\n                        </Box>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateLeaveType;","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\reducers\\index.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestComp\\LeaveRequestList.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestCompUser\\LeaveRequestListUser.js",["401","402","403"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestCompUser\\UpdateLeaveRequestUser.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveBalanceComp\\LeaveBalanceListUser.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveRequestCompUser\\AddLeaveRequestUser.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\LeaveManagementComponents\\LeaveBalanceComp\\LeaveBalanceList.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\TrackStatus.js",["404"],[],"import React from 'react'\r\nimport FilterByStatus from './FilterByStatus'\r\nimport FilterJob from './FilterJob'\r\nimport SearchJob from './SearchJob'\r\nimport AppliedJobs from './AppliedJobs'\r\nimport  Stack  from '@mui/material/Stack'\r\nimport FilterByCategory from './FilterByCategory'\r\nimport { Box } from '@mui/material'\r\n\r\nconst TrackStatus = () => {\r\n  return (\r\n    \r\n          <Stack direction=\"row\" sx={{width:1734,height:596,margin:\"-20px -500px\",backgroundColor:\"#F1F1F1\"}}>\r\n         <Box sx={{width:400,height:600,boxShadow:1,backgroundColor:\"white\",ml:46}}>\r\n          jfjds\r\n         </Box>\r\n          {/* <Box >   */}\r\n          <Stack sx={{ml:10}}>\r\n          <Stack sx={{mt:2,ml:4}} direction=\"row\">\r\n  <SearchJob />\r\n<FilterJob/>\r\n          </Stack>\r\n      \r\n                <AppliedJobs/>\r\n                </Stack>\r\n   \r\n<FilterByCategory/>\r\n\r\n        </Stack>\r\n       \r\n\r\n  )\r\n}\r\n\r\nexport default TrackStatus","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\HrJobPortal.js",["405","406"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\FilterByCategory.js",["407","408","409","410","411","412","413"],[],"import { Box, Button, Checkbox, FormControlLabel, Grid, Stack, Typography, makeStyles } from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport hrService from '../../../services/hr.service';\r\nimport RangeSlider from './dd';\r\n\r\nconst FilterByCategory = (props) => {\r\n           const jobcategory=[\"Design\",\"Development\",\"testing\"];\r\n           const jobtype=[\"Full time\",\"Part Time\",\"Remote\",\"Internship\"];\r\n           const [selectedFilters,setSelectedFilters]=useState([]);\r\nconst displayAllJobs=()=>{\r\n      hrService.getAllJobs().then((response) => {\r\n            props.setJob(response.data)\r\n            console.log(response.data);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nconst handleFilterJobType=(type)=>{\r\n     if(selectedFilters.includes(type)){\r\n     let filters=selectedFilters.filter((el)=>el!==type);\r\n     setSelectedFilters(filters);\r\n}\r\nelse{\r\n     setSelectedFilters([...selectedFilters,type]);\r\n}\r\n}\r\n\r\n\r\nconst handleFilterButtononClick=(category)=>{\r\nif(selectedFilters.includes(category)){\r\n     let filters=selectedFilters.filter((el)=>el!==category);\r\n     setSelectedFilters(filters);\r\n}\r\nelse{\r\n     setSelectedFilters([...selectedFilters,category]);\r\n}\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n\r\nif(selectedFilters.length>0){\r\n          props.setJob([]);\r\n\r\nselectedFilters.forEach((cat)=>{\r\n         console.log(cat);\r\n hrService.getJobBycategory(cat).then((response)=>{\r\n              console.log(response.data);\r\nresponse.data.forEach((i)=>{\r\n          props.setJob(prevstate=>[...prevstate,i]);\r\n     })\r\n})\r\n hrService.getJobBytype(cat).then((response)=>{\r\n              console.log(response.data);\r\nresponse.data.forEach((i)=>{\r\n          props.setJob(prevstate=>[...prevstate,i]);\r\n     })\r\n})\r\n     })\r\n}\r\nelse{\r\n       displayAllJobs();\r\n}\r\n\r\n},[selectedFilters])\r\n  return (\r\n <Box  boxShadow={1} borderWidth='1px'  width=\"450px\" margin=\"13px 40px 0px\" height=\"540px\" backgroundColor=\"white\">\r\n      <h4 style={{margin:\"10px 15px 20px 0px\",textAlign:'center'}}>Filter</h4>\r\n\r\n          <Grid container marginBottom={5}>\r\n                <Typography ml={2} mr={10} textAlign='center'>Category</Typography>\r\n\r\n      {jobcategory.map((value, index) => (\r\n<Button \r\nvariant=\"outlined\"\r\nonClick={\r\n     ()=>handleFilterButtononClick(value)\r\n}\r\nstyle={selectedFilters?.includes(value)?{backgroundColor:\"purple\",color:\"white\",margin:\"5px 10px 4px\",width:100,height:30,padding:4}:{color:\"black\",margin:\"5px 10px 4px\",width:100,height:30,padding:4}}\r\n>\r\n     {value}\r\n</Button>\r\n\r\n                ))}\r\n                </Grid>\r\n\r\n<RangeSlider job={props.job} setJob={props.setJob}/>\r\n   <Grid container mt={5}>\r\n<Typography ml={2} mr={10}>Job Type</Typography>\r\n      {jobtype.map((value, index) => (\r\n<Button \r\nvariant=\"outlined\"\r\nonClick={\r\n     ()=>handleFilterJobType(value)\r\n}\r\nstyle={selectedFilters?.includes(value)?{backgroundColor:\"purple\",color:\"white\",margin:\"5px 10px 4px\",width:100,height:30,padding:4}:{color:\"black\",margin:\"5px 10px 4px\",width:100,maxWidth:150,height:30,padding:4}}\r\n>\r\n     {value}\r\n</Button>\r\n\r\n                ))}\r\n                </Grid>\r\n                                </Box>  \r\n  )}\r\n  export default FilterByCategory","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\Jav.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\CustomerJobPortal.js",["414","415","416"],[],"import React, { useState } from 'react'\r\nimport FilterJob from './FilterJob'\r\nimport SearchJob from './SearchJob'\r\nimport AllJob from './AllJob'\r\nimport { Box, Button, Stack, Typography } from '@mui/material'\r\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport FilterByCategory from './FilterByCategory'\r\nimport { CardGiftcard } from '@mui/icons-material'\r\nconst CustomerJobPortal = () => {\r\n  const {empid}=useParams();\r\n  const [job,setJob]=useState([]);\r\n  const history=useHistory();\r\n  return (\r\n    <Stack direction=\"row\" sx={{width:1734,height:596,margin:\"-20px -500px\",backgroundColor:\"#F1F1F1\"}}>\r\n         <Box sx={{width:400,height:600,boxShadow:1,backgroundColor:\"white\",ml:46}}>\r\n          jfjds\r\n         </Box>\r\n          {/* <Box >   */}\r\n          <Stack sx={{ml:10}}>\r\n          <Stack sx={{mt:2,ml:4}} direction=\"row\">\r\n  <SearchJob job={job} setJob={setJob}/>\r\n    <Button \r\n    sx={{width:100,height:44,ml:5,marginRight:10,fontSize:10,p:1}}\r\n        variant=\"outlined\"\r\n        onClick={()=>{\r\n          history.push(`/trackStatus/${empid}`);\r\n        }}>Track Status</Button>\r\n          </Stack>\r\n      \r\n                <AllJob job={job} setJob={setJob}/>\r\n                </Stack>\r\n    {/* </Box> */}\r\n          {/* <div style={{width:350,height:800,marginRight:\"-350px\"}}>  \r\n<FilterByCategory job={job} setJob={setJob}/>\r\n</div> */}\r\n<FilterByCategory job={job} setJob={setJob}/>\r\n\r\n        </Stack>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default CustomerJobPortal","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\actions\\types.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\user.service.js",["417"],[],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/test/\";\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + \"all\");\r\n  }\r\n\r\n  getGreetings() {\r\n    return axios.get(API_URL + \"greeting\", { headers: authHeader() });\r\n  }\r\n  \r\n}\r\n\r\nexport default new UserService();\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\reducers\\message.js",["418"],[],"import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_MESSAGE:\r\n      return { message: payload };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return { message: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\reducers\\auth.js",["419","420"],[],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\nconst employeeId = JSON.parse(localStorage.getItem(\"employeeId\"));\r\n\r\nconst initialState = user\r\n  ? { isLoggedIn: true, user }\r\n  : { isLoggedIn: false, user: null };\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: payload.user,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\CalenderView.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\hr.service.js",["421","422"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\auth.service.js",["423"],[],"import axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password, role) {\r\n    return axios\r\n      .post(API_URL + \"signin\", { username, password, role })\r\n      .then((response) => {\r\n        if (response.data.accessToken) {\r\n\r\n          // Store the user details in local storage\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n          // Fetch the employee ID using the user's ID\r\n          axios.get(API_URL + \"getEmployeeId\", {\r\n            params: { userId: response.data.id }\r\n\r\n          }).then((employeeResponse) => {\r\n            // Store the employee ID in local storage\r\n            localStorage.setItem(\"employeeId\", employeeResponse.data);\r\n          });\r\n\r\n          return response.data;\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    Redirect(\"/login\");\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"employeeId\");\r\n  }\r\n\r\n  register(role, username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      role,\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\employee.service.js",["424"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\AppliedJobs.js",["425","426","427","428","429","430"],[],"import React, { useEffect, useState } from 'react'\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Card from '@mui/material/Card';\r\nimport employeeService from '../../../services/employee.service';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nconst AppliedJobs = () => {\r\n  function createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\nconst [appliedJob,setAppliedJob]=useState([]);\r\nconst {empid}=useParams();\r\nconsole.log(empid);\r\nuseEffect(()=>{\r\nemployeeService.getAppliedJobforEmp(empid).then((response) => {\r\n            setAppliedJob(response.data)\r\n            console.log(response.data);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n},[])\r\n\r\n\r\n  return (\r\n    <div>\r\n    <TableContainer component={Card}>\r\n      <Table width=\"400px\" aria-label=\"simple table\">\r\n        <colgroup>\r\n        <col style={{width:'1%'}}/>\r\n        <col style={{width:'1%'}}/>\r\n        <col style={{width:'1%'}}/>\r\n        <col style={{width:'1%'}}/>\r\n        <col style={{width:'1%'}}/>\r\n        <col style={{width:'1%'}}/>\r\n\r\n        </colgroup>\r\n        <TableHead>\r\n          <TableRow sx={{backgroundColor:\"grey\"}}>\r\n            <TableCell >Job Profile</TableCell>\r\n            <TableCell>Status</TableCell>\r\n            <TableCell >Published date</TableCell>\r\n            <TableCell >Salary</TableCell>\r\n            <TableCell >Last date</TableCell>\r\n            <TableCell>Action</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        {/* <TableBody>\r\n        {appliedJob.map((row) => (\r\n            <TableRow\r\n              key={row.name}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } ,height:20}}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell>{row.calories}</TableCell>\r\n              <TableCell>{row.fat}</TableCell>\r\n              <TableCell>{row.carbs}</TableCell>\r\n              <TableCell>{row.protein}</TableCell>\r\n            </TableRow>\r\n          ))}  \r\n        </TableBody> */}\r\n      </Table>\r\n    </TableContainer>\r\n \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppliedJobs","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\FilterByStatus.js",["431"],[],"import React from 'react'\r\nimport { useState } from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {Stack,Typography}from '@mui/material';\r\nimport hrService from '../../../services/hr.service';\r\nconst FilterByStatus = () => {\r\n     const [status, setstatus] = useState('');\r\nconst [job,setJob]=useState('');\r\n  const handleChange = (event) => {\r\n    setstatus(event.target.value);\r\n hrService.getJobByStatus(event.target.value).then((response)=>{\r\n              console.log(response.data);\r\nif(response.data.length>0){\r\n          setJob(prevstate=>[...prevstate,response.data[0]]);\r\n}\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n  };\r\n\r\n\r\n  return (\r\n<Stack direction={'row'} style={{margin:\"50px 380px\"}}>\r\n      <Typography m={3}>Sort :</Typography>\r\n      <FormControl sx={{mt:1,  minWidth: 120,height:-10 }}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\" style={{marginTop:0}}>Category</InputLabel>\r\n        <Select\r\n          id=\"demo-simple-select-helper\"\r\n          value={status}\r\n          label=\"Category\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Stack>  )\r\n}\r\n\r\nexport default FilterByStatus","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\FilterJob.js",["432","433"],[],"import { useState } from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {Button, Stack,Typography}from '@mui/material';\r\nimport hrService from '../../../services/hr.service';\r\nconst FilterJob = () => {\r\n     const [type, setType] = useState('');\r\nconst [job,setJob]=useState('');\r\n  const handleChange = (event) => {\r\n    console.log(\"sdcsd\")\r\n    setType(event.target.value);\r\n hrService.getJobBytype(event.target.value).then((response)=>{\r\n              console.log(response.data);\r\nif(response.data.length>0){\r\n          setJob(prevstate=>[...prevstate,response.data[0]]);\r\n}\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n  };\r\n  return (\r\n     <Stack direction=\"row\">\r\n                  <h1 margin={\"70px 40px\"} fontSize={20} fontWeight={'bold'}>AppliedJobs :</h1>\r\n<Stack direction={'row'} style={{margin:\"50px 380px\"}}>\r\n      <Typography m={3}>Sort :</Typography>\r\n      <FormControl sx={{mt:1,  minWidth: 120,height:-10 }}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\" style={{marginTop:0}}>Category</InputLabel>\r\n        <Select\r\n          id=\"demo-simple-select-helper\"\r\n          value={type}\r\n          label=\"Category\"\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default FilterJob","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\SearchJob.js",["434","435","436","437","438","439","440"],[],"import React, { useState } from 'react'\r\nimport {Stack,Typography,Button,Card,Paper,InputBase,Divider,IconButton, Drawer} from '@mui/material';\r\nimport { Search } from '@mui/icons-material';\r\nimport hrService from '../../../services/hr.service';\r\n\r\nconst SearchJob = (props) => {\r\n\r\nconst displayAllJobs=()=>{\r\n     hrService.getAllJobs().then((response) => {\r\n            props.setJob(response.data)\r\n            console.log(response.data);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n    const searchByGroceryName=(val)=>{\r\n       console.log(val.length);\r\n       if(val.length==0){\r\n        displayAllJobs();\r\n       }\r\n       else{\r\n hrService.getJobByprofile(val).then((response)=>{\r\n              console.log(response.data);\r\nif(response.data.length>0){\r\n                   props.setJob([]);\r\n                   response.data.forEach((i)=>{\r\n          props.setJob(prevstate=>[...prevstate,i]);\r\n                   })\r\n}\r\nelse{\r\nprops.setJob([]);\r\n}\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n      }\r\n    }\r\n  return (\r\n<Paper\r\n      style={{  display: 'flex', alignItems: 'center', width:500,height:50,border:\"0px solid grey\",borderRadius:40 }}\r\n    >\r\n       <InputBase\r\n        style={{  padding:50,flex: 1 }}\r\n        placeholder=\"Search for jobs\"\r\n        onChange = {event => searchByGroceryName(event.currentTarget.value)}\r\n\r\n      />\r\n  \r\n      <Divider style={{ height: 50}} orientation=\"vertical\" />\r\n<IconButton color=\"primary\" style={{ p: '10px' }} aria-label=\"directions\">\r\n<Search/>  </IconButton>\r\n    </Paper>  )\r\n}\r\n\r\nexport default SearchJob","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\DashBoardComponents\\SmallCalendar.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\ViewJob.js",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\dd.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\PostJob.js",["471","472"],[],"import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n// import HrService from \"../../services/hr.service\";\r\nimport {\r\n    Card, CardContent, CardHeader, TextField, Button, Grid, Box, MenuItem, FormControl, InputLabel, Select,\r\n} from \"@mui/material\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { DatePicker } from '@mui/lab/DatePicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport hrService from \"../../../services/hr.service\";\r\n\r\nfunction PostJob(props) {\r\n    const [job, setJob] = useState({});\r\n    // const [addSuccess, setAddSuccess] = useState(false);\r\n    // const { user: currentUser } = props;\r\n\r\n   \r\n\r\n    const handleFieldChange = (fieldName, value) => {\r\n        const v=`\"${fieldName}\"`;\r\n        setJob((prevJob) => ({\r\n            ...prevJob,\r\n           [v]: value,\r\n        }));\r\n    \r\n    };\r\n\r\n    const handleAdd = () => {\r\n        setJob((prevJob)=>({\r\n            ...prevJob,\r\n            \"publish_date\":new Date(),\r\n        }))\r\n        console.log(job);\r\n        // Validate the phone number\r\n        // if (Job.phoneNumber && Job.phoneNumber.length !== 10) {\r\n        //     alert(\"Phone number must be 10 digits.\");\r\n        //     return;\r\n        // }\r\n\r\n        // // Validate email format\r\n        // if (Job.email && !isValidEmail(Job.email)) {\r\n        //     alert(\"Invalid email format.\");\r\n        //     return;\r\n        // }\r\n\r\n        hrService.postJob(job)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                // setAddSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error adding Job:\", error);\r\n            });\r\n\r\n    };\r\n\r\n    // if (addSuccess) {\r\n    //     return <Redirect to=\"/Job-list\" />;\r\n    // }\r\n\r\n    // if (!currentUser) {\r\n    //     return <Redirect to=\"/login\" />;\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <CardHeader className=\"title\" title=\"Add New Job\" />\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Job Profile\"\r\n                                // value={Job.fname || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"jobProfile\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Job Category\"\r\n                                // value={Job.lname || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"category\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <FormControl fullWidth variant=\"outlined\">\r\n                                <InputLabel>Job Type</InputLabel>\r\n                                <Select\r\n                                    label=\"Gender\"\r\n                                    // value={Job.gender || \"\"}\r\n                                    onChange={(e) => handleFieldChange(\"jobType\", e.target.value)}\r\n                                >\r\n                                    <MenuItem value=\"Female\">Female</MenuItem>\r\n                                    <MenuItem value=\"Male\">Male</MenuItem>\r\n                                    <MenuItem value=\"Other\">Other</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"position\"\r\n                                // value={Job.department || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"position\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"specialization\"\r\n                                // value={Job.email || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"specialization\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Experience\"\r\n                                // value={Job.phoneNumber || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"experience\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Last date\"\r\n                                type=\"date\"\r\n                                // value={Job.doJoining || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"lastdate\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Salary\"\r\n                                // value={Job.jobTitle || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"salary\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"Vacancy\"\r\n                                // value={Job.address || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"vacancy\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <TextField\r\n                                label=\"description\"\r\n                                // value={Job.paddress || \"\"}\r\n                                onChange={(e) => handleFieldChange(\"description\", e.target.value)}\r\n                                fullWidth\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        </Grid>\r\n                         <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            startIcon={<Add />}\r\n                            onClick={handleAdd}\r\n                        >\r\n                            Post Job\r\n                        </Button>\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostJob;\r\n","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\Status.js",["473","474","475","476","477","478","479","480"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\AppliedJob.js",["481","482","483","484","485","486","487","488"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\CustomerJobPortal\\AllJob.js",["489","490","491","492","493","494","495","496","497","498","499","500","501","502"],[],"import React from 'react'\r\nimport HrService from '../../../services/hr.service';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport {Stack,Typography,Button,Card,Paper,InputBase,Divider,IconButton, Drawer,Grid, Box, Dialog, Snackbar, Alert} from '@mui/material';\r\nimport SearchJob from './SearchJob';\r\nimport { ChairOutlined, ChangeCircle, CurrencyRupeeSharp } from '@mui/icons-material';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport employeeService from '../../../services/employee.service';\r\nconst AllJob = (props) => {\r\n      const [open,setOpen]=useState(false);\r\n      const[feedback,setFeedback]=useState(false);\r\n      const[d,setD]=useState();\r\n     const {empid}=useParams();\r\n     const [applied,setApplied]=useState([]);\r\n           const colors=[\"#e3dbfa\",\"#fbe2f4\",\"#ffe1cc\",'#d4f6ed'];\r\nconst randomColor=colors[Math.floor(Math.random()*colors.length)];\r\n      console.log(d);\r\n    useEffect(() => {\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        getAlljobDetails();\r\n    }, []);\r\n\r\n    const getAlljobDetails = () => {\r\n        HrService.getAllJobs().then((response) => {\r\n            props.setJob(response.data)\r\n            console.log(response.data);\r\n        }).catch(error =>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n\r\n    const ApplyforJob=(jobId)=>{\r\n      const obj={};\r\n      employeeService.applyforJob(empid,jobId,obj).then((response)=>{\r\n        console.log(response.data);\r\n        setFeedback(true);\r\n        setApplied(true);\r\n\r\n      })\r\n    }\r\n    const openDrawer=(index)=>{\r\nsetOpen(true);\r\nsetD(index);\r\n    }\r\n  return (\r\n    <>\r\n    <h4 style={{margin:\"50px 34px\"}}>Recommended Jobs :</h4>\r\n    <Grid container sx={{mt:-4,ml:1}}>\r\n\r\n{\r\n  props.job &&  props.job.map((j,index)=>\r\n    {\r\n      const col=colors[index%colors.length];\r\n      const date=new Date(j.publish_date);\r\n      const currdate=new Date();\r\n      var diff=currdate.getDate()-date.getDate();\r\n      const profile=j.jobProfile;\r\n// var days=diff/(1000*60*60*24);\r\n      return (\r\n    <>\r\n    \r\n       {/* <Card style={{width:230,height:270,margin:\"5px 10px 10px\",border:\"1px solid\",borderColor:\"white\",borderRadius:20,padding:5}}> */}\r\n          <Card style={{width:220,height:200,border:\"1px solid\",margin:\"5px 10px 10px\",borderColor:\"white\",borderRadius:20,backgroundColor:col}}>\r\n            <Stack>\r\n              <Button variant=\"contained\" sx={{bgcolor:\"white\",margin:\"10px 20px\",width:\"100px\",height:30,color:\"black\",border:\"0px solid white\",borderRadius:2,fontSize:10}} >{diff} days ago</Button>\r\n               <Typography style={{fontSize:10,margin:\"10px 20px 0px \"}}>{j.category}</Typography>   \r\n    <Typography style={{fontSize:20,fontWeight:'bolder',color:\"purple\",margin:\"0px 20px\"}}>{j.jobProfile}</Typography>   \r\n<Stack direction=\"row\">\r\n  <Stack>\r\n           <Typography style={{fontSize:10,margin:\"15px 20px\"}}>Last date : </Typography>   \r\n\r\n       <Typography style={{fontSize:12,margin:\"-10px 20px\",fontWeight:\"bolder\"}}>{j.lastdate}</Typography>   \r\n</Stack>\r\n<Button variant=\"contained\"  onClick={()=>{openDrawer(index)}} style={{width:70,height:30,backgroundColor:\"black\",color:\"white\",margin:\"15px\"}}>\r\n  <Typography style={{fontSize:10}}>Details</Typography></Button>  \r\n  \r\n\r\n  </Stack>\r\n \r\n{d!=null && <Drawer\r\n      anchor='right'\r\n      open={open}\r\n      onClose={()=>setOpen(false)}\r\n      PaperProps={{sx:{width:300}}}\r\n    >\r\n  \r\n     {console.log(props.job[d])}\r\n     {d!=null  && <Stack  padding={2}>\r\n      <Box boxShadow={1} borderWidth='1px'  width=\"270px\"  height=\"80px\" backgroundColor=\"#c2c6be\">\r\n      <Typography style={{fontSize:20,fontWeight:'bolder',color:\"black\",margin:\"0px 30px\",textAlign:'center'}}>{(props.job[d]).jobProfile}</Typography>  \r\n      <Stack direction='row'>\r\n               <Typography style={{fontSize:15,margin:\"10px 30px 0px \"}}>{props.job[d].jobType}</Typography>  \r\n               <Divider></Divider> \r\n               <Typography style={{fontSize:15,margin:\"10px 35px 0px 4px\"}}>{props.job[d].publish_date}</Typography>   \r\n</Stack> \r\n      </Box>\r\n      <Stack direction='row' mt={4} ml={5} marginBottom={4}>\r\n        <div style={{marginRight:\"44px\"}}>\r\n        <Box boxShadow={1} borderWidth='1px' borderRadius={10} p={1}  width=\"40px\"  height=\"40px\" backgroundColor=\"#9ADD56\"><CurrencyRupeeSharp/></Box>\r\n                <Typography style={{fontSize:15,color:\"#909fa5\"}}>Salary</Typography>  \r\n\r\n        <Typography style={{fontSize:15}}>Rs.{props.job[d].salary}</Typography>  \r\n\r\n        </div>\r\n          <div>\r\n        <Box boxShadow={1} borderWidth='1px' borderRadius={10} p={1}  width=\"40px\"  height=\"40px\" backgroundColor=\"#e3dbfa\"><ChairOutlined/></Box>\r\n                <Typography style={{fontSize:15,color:\"#909fa5\"}}>Position</Typography>  \r\n\r\n        <Typography style={{fontSize:15}}>{props.job[d].position}</Typography>  \r\n\r\n        </div>\r\n      </Stack>\r\n\r\n      <h4>Description</h4>\r\n      <Typography color=\"#5d6c72\">{props.job[d].description}</Typography>\r\n      <Typography mt={4} color=\"#5d6c72\">{props.job[d].experience}</Typography>\r\n      <Divider mt={3}/> \r\n            <Typography mt={4} color=\"#909fa5\">Last Date to Apply :<strong>{props.job[d].lastdate}</strong></Typography>\r\n\r\n            <Stack direction=\"row\" mt={4}>\r\n            <Button variant=\"outlined\"  onClick={()=>{\r\n              setOpen(false);\r\n              setD()}} style={{width:110,height:40,color:'black'}}>\r\n  <Typography style={{fontSize:15,fontWeight:'bolder'}}>Cancel</Typography></Button>  \r\n{/* {<Button variant=\"outlined\"  disabled style={{width:150,height:40,backgroundColor:\"purple\",color:\"white\",marginLeft:10}}>\r\n  <Typography style={{fontSize:15,fontWeight:'bolder'}}>Applied</Typography></Button>  } */}\r\n  {applied && <Button variant=\"outlined\"  onClick={()=>{ApplyforJob(props.job[d].jobId)}} style={{width:150,height:40,backgroundColor:\"purple\",color:\"white\",marginLeft:10}}>\r\n  <Typography style={{fontSize:15,fontWeight:'bolder'}}>Apply now</Typography></Button>  }\r\n  <Snackbar open={feedback} autoHideDuration={6000} onClose={()=>setFeedback(false)}>\r\n  <Alert onClose={()=>setFeedback(false)} severity=\"success\" sx={{ width: '100%' }}>\r\n    This is a success message!\r\n  </Alert>s\r\n</Snackbar>\r\n  </Stack>\r\n      </Stack>\r\n    }\r\n    </Drawer>  }\r\n    \r\n  \r\n            </Stack>\r\n</Card>\r\n\r\n\r\n  </>\r\n      )\r\n    }\r\n   ) }\r\n   </Grid>\r\n</>\r\n  )\r\n}\r\n\r\nexport default AllJob","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\ApplicationInfo.js",["503","504","505"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\services\\auth-header.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\example.js",[],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\FilterHrJob.js",["506","507"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\JobDetails.js",["508","509","510","511","512","513","514","515"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\AllApplication.js",["516","517","518"],[],"import { Box, Tab, Tabs } from '@mui/material'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Status from './Status';\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nconst AllApplication = (props) => {\r\n  const [value, setValue] = React.useState('Inprocess');\r\n  const JobStatus=[\"Inprocess\",\"Interviewed\",\"Accepted\",\"Rejected\"];\r\n  const {jobProfile}=useParams();\r\n  console.log(jobProfile);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', typography: 'body1' }}>\r\n      <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n            {\r\n              JobStatus.map((i)=>(\r\n                    <Tab label={i} value={i} />\r\n\r\n              ))\r\n            }\r\n            \r\n          </TabList>\r\n        </Box>\r\n         {\r\n              JobStatus.map((i)=>(\r\n\r\n        <TabPanel value={i}><Status jobProfile={jobProfile} status={i}/></TabPanel>\r\n              ))}\r\n        {/* <TabPanel value=\"2\"><Status status=\"interviewed\"/></TabPanel>\r\n        <TabPanel value=\"3\"><Status status=\"Accepted\"/></TabPanel>\r\n                <TabPanel value=\"4\"><Status status=\"Rejected\"/></TabPanel> */}\r\n\r\n      </TabContext>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\nexport default AllApplication","C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\JobManagementComponents\\HrJobPortal\\JobInfo.js",["519","520","521","522","523","524","525","526","527","528"],[],"C:\\Users\\xyz\\Final_Capstone_Project\\Frontend\\src\\components\\DashBoardComponents\\ProfileNavigationItem.js",["529","530"],[],{"ruleId":"531","severity":1,"message":"532","line":38,"column":8,"nodeType":"533","messageId":"534","endLine":38,"endColumn":24},{"ruleId":"531","severity":1,"message":"535","line":39,"column":8,"nodeType":"533","messageId":"534","endLine":39,"endColumn":11},{"ruleId":"531","severity":1,"message":"536","line":50,"column":10,"nodeType":"533","messageId":"534","endLine":50,"endColumn":17},{"ruleId":"531","severity":1,"message":"537","line":51,"column":8,"nodeType":"533","messageId":"534","endLine":51,"endColumn":15},{"ruleId":"531","severity":1,"message":"538","line":54,"column":8,"nodeType":"533","messageId":"534","endLine":54,"endColumn":15},{"ruleId":"539","severity":1,"message":"540","line":112,"column":15,"nodeType":"541","endLine":112,"endColumn":58},{"ruleId":"542","severity":1,"message":"543","line":45,"column":9,"nodeType":"541","endLine":45,"endColumn":21},{"ruleId":"542","severity":1,"message":"543","line":46,"column":9,"nodeType":"541","endLine":46,"endColumn":21},{"ruleId":"542","severity":1,"message":"543","line":47,"column":9,"nodeType":"541","endLine":47,"endColumn":21},{"ruleId":"542","severity":1,"message":"543","line":48,"column":9,"nodeType":"541","endLine":48,"endColumn":21},{"ruleId":"539","severity":1,"message":"540","line":195,"column":13,"nodeType":"541","endLine":195,"endColumn":33},{"ruleId":"531","severity":1,"message":"544","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":13},{"ruleId":"531","severity":1,"message":"545","line":6,"column":10,"nodeType":"533","messageId":"534","endLine":6,"endColumn":19},{"ruleId":"531","severity":1,"message":"546","line":6,"column":70,"nodeType":"533","messageId":"534","endLine":6,"endColumn":78},{"ruleId":"531","severity":1,"message":"547","line":2,"column":20,"nodeType":"533","messageId":"534","endLine":2,"endColumn":24},{"ruleId":"531","severity":1,"message":"548","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":17},{"ruleId":"531","severity":1,"message":"549","line":6,"column":10,"nodeType":"533","messageId":"534","endLine":6,"endColumn":19},{"ruleId":"531","severity":1,"message":"550","line":6,"column":21,"nodeType":"533","messageId":"534","endLine":6,"endColumn":33},{"ruleId":"531","severity":1,"message":"551","line":8,"column":10,"nodeType":"533","messageId":"534","endLine":8,"endColumn":20},{"ruleId":"531","severity":1,"message":"547","line":2,"column":20,"nodeType":"533","messageId":"534","endLine":2,"endColumn":24},{"ruleId":"531","severity":1,"message":"552","line":30,"column":10,"nodeType":"533","messageId":"534","endLine":30,"endColumn":20},{"ruleId":"531","severity":1,"message":"553","line":1,"column":17,"nodeType":"533","messageId":"534","endLine":1,"endColumn":25},{"ruleId":"531","severity":1,"message":"554","line":8,"column":10,"nodeType":"533","messageId":"534","endLine":8,"endColumn":16},{"ruleId":"531","severity":1,"message":"555","line":33,"column":9,"nodeType":"533","messageId":"534","endLine":33,"endColumn":26},{"ruleId":"531","severity":1,"message":"556","line":13,"column":8,"nodeType":"533","messageId":"534","endLine":13,"endColumn":25},{"ruleId":"531","severity":1,"message":"557","line":21,"column":32,"nodeType":"533","messageId":"534","endLine":21,"endColumn":55},{"ruleId":"531","severity":1,"message":"558","line":34,"column":9,"nodeType":"533","messageId":"534","endLine":34,"endColumn":32},{"ruleId":"531","severity":1,"message":"559","line":4,"column":53,"nodeType":"533","messageId":"534","endLine":4,"endColumn":64},{"ruleId":"531","severity":1,"message":"560","line":8,"column":44,"nodeType":"533","messageId":"534","endLine":8,"endColumn":52},{"ruleId":"531","severity":1,"message":"561","line":8,"column":54,"nodeType":"533","messageId":"534","endLine":8,"endColumn":67},{"ruleId":"531","severity":1,"message":"562","line":19,"column":22,"nodeType":"533","messageId":"534","endLine":19,"endColumn":35},{"ruleId":"531","severity":1,"message":"563","line":2,"column":8,"nodeType":"533","messageId":"534","endLine":2,"endColumn":22},{"ruleId":"531","severity":1,"message":"564","line":3,"column":10,"nodeType":"533","messageId":"534","endLine":3,"endColumn":16},{"ruleId":"531","severity":1,"message":"565","line":4,"column":8,"nodeType":"533","messageId":"534","endLine":4,"endColumn":15},{"ruleId":"531","severity":1,"message":"566","line":1,"column":23,"nodeType":"533","messageId":"534","endLine":1,"endColumn":31},{"ruleId":"531","severity":1,"message":"567","line":1,"column":33,"nodeType":"533","messageId":"534","endLine":1,"endColumn":49},{"ruleId":"531","severity":1,"message":"568","line":1,"column":57,"nodeType":"533","messageId":"534","endLine":1,"endColumn":62},{"ruleId":"531","severity":1,"message":"569","line":1,"column":76,"nodeType":"533","messageId":"534","endLine":1,"endColumn":86},{"ruleId":"531","severity":1,"message":"570","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":32},{"ruleId":"531","severity":1,"message":"571","line":4,"column":8,"nodeType":"533","messageId":"534","endLine":4,"endColumn":23},{"ruleId":"572","severity":1,"message":"573","line":68,"column":3,"nodeType":"574","endLine":68,"endColumn":20,"suggestions":"575"},{"ruleId":"531","severity":1,"message":"576","line":2,"column":8,"nodeType":"533","messageId":"534","endLine":2,"endColumn":17},{"ruleId":"531","severity":1,"message":"577","line":5,"column":30,"nodeType":"533","messageId":"534","endLine":5,"endColumn":40},{"ruleId":"531","severity":1,"message":"578","line":8,"column":10,"nodeType":"533","messageId":"534","endLine":8,"endColumn":22},{"ruleId":"579","severity":1,"message":"580","line":17,"column":1,"nodeType":"581","endLine":17,"endColumn":34},{"ruleId":"579","severity":1,"message":"582","line":5,"column":1,"nodeType":"581","endLine":18,"endColumn":2},{"ruleId":"531","severity":1,"message":"583","line":10,"column":7,"nodeType":"533","messageId":"534","endLine":10,"endColumn":17},{"ruleId":"579","severity":1,"message":"582","line":16,"column":1,"nodeType":"581","endLine":51,"endColumn":2},{"ruleId":"531","severity":1,"message":"584","line":10,"column":7,"nodeType":"533","messageId":"534","endLine":10,"endColumn":23},{"ruleId":"579","severity":1,"message":"580","line":211,"column":1,"nodeType":"581","endLine":211,"endColumn":32},{"ruleId":"579","severity":1,"message":"580","line":47,"column":1,"nodeType":"581","endLine":47,"endColumn":34},{"ruleId":"579","severity":1,"message":"580","line":88,"column":1,"nodeType":"581","endLine":88,"endColumn":38},{"ruleId":"531","severity":1,"message":"585","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":16},{"ruleId":"531","severity":1,"message":"586","line":4,"column":8,"nodeType":"533","messageId":"534","endLine":4,"endColumn":17},{"ruleId":"531","severity":1,"message":"587","line":5,"column":21,"nodeType":"533","messageId":"534","endLine":5,"endColumn":37},{"ruleId":"531","severity":1,"message":"588","line":13,"column":12,"nodeType":"533","messageId":"534","endLine":13,"endColumn":22},{"ruleId":"531","severity":1,"message":"589","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":18},{"ruleId":"572","severity":1,"message":"590","line":26,"column":3,"nodeType":"574","endLine":26,"endColumn":5,"suggestions":"591"},{"ruleId":"531","severity":1,"message":"592","line":11,"column":8,"nodeType":"533","messageId":"534","endLine":11,"endColumn":11},{"ruleId":"531","severity":1,"message":"564","line":6,"column":9,"nodeType":"533","messageId":"534","endLine":6,"endColumn":15},{"ruleId":"531","severity":1,"message":"592","line":10,"column":8,"nodeType":"533","messageId":"534","endLine":10,"endColumn":11},{"ruleId":"531","severity":1,"message":"553","line":1,"column":17,"nodeType":"533","messageId":"534","endLine":1,"endColumn":25},{"ruleId":"531","severity":1,"message":"568","line":2,"column":9,"nodeType":"533","messageId":"534","endLine":2,"endColumn":14},{"ruleId":"531","severity":1,"message":"577","line":2,"column":15,"nodeType":"533","messageId":"534","endLine":2,"endColumn":25},{"ruleId":"531","severity":1,"message":"564","line":2,"column":26,"nodeType":"533","messageId":"534","endLine":2,"endColumn":32},{"ruleId":"531","severity":1,"message":"593","line":2,"column":33,"nodeType":"533","messageId":"534","endLine":2,"endColumn":37},{"ruleId":"531","severity":1,"message":"594","line":2,"column":74,"nodeType":"533","messageId":"534","endLine":2,"endColumn":80},{"ruleId":"595","severity":1,"message":"596","line":19,"column":21,"nodeType":"597","messageId":"598","endLine":19,"endColumn":23},{"ruleId":"531","severity":1,"message":"548","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":17},{"ruleId":"531","severity":1,"message":"599","line":5,"column":38,"nodeType":"533","messageId":"534","endLine":5,"endColumn":43},{"ruleId":"531","severity":1,"message":"600","line":5,"column":44,"nodeType":"533","messageId":"534","endLine":5,"endColumn":53},{"ruleId":"531","severity":1,"message":"601","line":5,"column":54,"nodeType":"533","messageId":"534","endLine":5,"endColumn":61},{"ruleId":"531","severity":1,"message":"602","line":5,"column":62,"nodeType":"533","messageId":"534","endLine":5,"endColumn":72},{"ruleId":"531","severity":1,"message":"594","line":5,"column":74,"nodeType":"533","messageId":"534","endLine":5,"endColumn":80},{"ruleId":"531","severity":1,"message":"603","line":5,"column":87,"nodeType":"533","messageId":"534","endLine":5,"endColumn":90},{"ruleId":"531","severity":1,"message":"604","line":5,"column":92,"nodeType":"533","messageId":"534","endLine":5,"endColumn":98},{"ruleId":"531","severity":1,"message":"546","line":5,"column":100,"nodeType":"533","messageId":"534","endLine":5,"endColumn":108},{"ruleId":"531","severity":1,"message":"605","line":5,"column":110,"nodeType":"533","messageId":"534","endLine":5,"endColumn":115},{"ruleId":"531","severity":1,"message":"606","line":5,"column":117,"nodeType":"533","messageId":"534","endLine":5,"endColumn":128},{"ruleId":"531","severity":1,"message":"607","line":5,"column":130,"nodeType":"533","messageId":"534","endLine":5,"endColumn":140},{"ruleId":"531","severity":1,"message":"608","line":5,"column":142,"nodeType":"533","messageId":"534","endLine":5,"endColumn":148},{"ruleId":"531","severity":1,"message":"609","line":5,"column":150,"nodeType":"533","messageId":"534","endLine":5,"endColumn":158},{"ruleId":"531","severity":1,"message":"610","line":7,"column":10,"nodeType":"533","messageId":"534","endLine":7,"endColumn":23},{"ruleId":"531","severity":1,"message":"611","line":7,"column":25,"nodeType":"533","messageId":"534","endLine":7,"endColumn":37},{"ruleId":"531","severity":1,"message":"612","line":7,"column":39,"nodeType":"533","messageId":"534","endLine":7,"endColumn":57},{"ruleId":"531","severity":1,"message":"613","line":8,"column":8,"nodeType":"533","messageId":"534","endLine":8,"endColumn":21},{"ruleId":"531","severity":1,"message":"614","line":9,"column":8,"nodeType":"533","messageId":"534","endLine":9,"endColumn":21},{"ruleId":"531","severity":1,"message":"615","line":10,"column":8,"nodeType":"533","messageId":"534","endLine":10,"endColumn":25},{"ruleId":"531","severity":1,"message":"616","line":11,"column":8,"nodeType":"533","messageId":"534","endLine":11,"endColumn":19},{"ruleId":"531","severity":1,"message":"617","line":21,"column":11,"nodeType":"533","messageId":"534","endLine":21,"endColumn":23},{"ruleId":"531","severity":1,"message":"618","line":22,"column":11,"nodeType":"533","messageId":"534","endLine":22,"endColumn":24},{"ruleId":"531","severity":1,"message":"619","line":23,"column":11,"nodeType":"533","messageId":"534","endLine":23,"endColumn":18},{"ruleId":"531","severity":1,"message":"620","line":24,"column":11,"nodeType":"533","messageId":"534","endLine":24,"endColumn":21},{"ruleId":"531","severity":1,"message":"621","line":26,"column":12,"nodeType":"533","messageId":"534","endLine":26,"endColumn":16},{"ruleId":"531","severity":1,"message":"622","line":27,"column":11,"nodeType":"533","messageId":"534","endLine":27,"endColumn":12},{"ruleId":"531","severity":1,"message":"623","line":28,"column":12,"nodeType":"533","messageId":"534","endLine":28,"endColumn":20},{"ruleId":"531","severity":1,"message":"624","line":28,"column":21,"nodeType":"533","messageId":"534","endLine":28,"endColumn":32},{"ruleId":"531","severity":1,"message":"625","line":50,"column":11,"nodeType":"533","messageId":"534","endLine":50,"endColumn":31},{"ruleId":"531","severity":1,"message":"626","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":18},{"ruleId":"531","severity":1,"message":"551","line":8,"column":10,"nodeType":"533","messageId":"534","endLine":8,"endColumn":20},{"ruleId":"531","severity":1,"message":"601","line":3,"column":23,"nodeType":"533","messageId":"534","endLine":3,"endColumn":30},{"ruleId":"531","severity":1,"message":"587","line":6,"column":21,"nodeType":"533","messageId":"534","endLine":6,"endColumn":37},{"ruleId":"572","severity":1,"message":"627","line":20,"column":7,"nodeType":"574","endLine":20,"endColumn":9,"suggestions":"628"},{"ruleId":"595","severity":1,"message":"596","line":33,"column":14,"nodeType":"597","messageId":"598","endLine":33,"endColumn":16},{"ruleId":"595","severity":1,"message":"596","line":35,"column":10,"nodeType":"597","messageId":"598","endLine":35,"endColumn":12},{"ruleId":"595","severity":1,"message":"596","line":37,"column":10,"nodeType":"597","messageId":"598","endLine":37,"endColumn":12},{"ruleId":"595","severity":1,"message":"596","line":39,"column":10,"nodeType":"597","messageId":"598","endLine":39,"endColumn":12},{"ruleId":"595","severity":1,"message":"596","line":135,"column":24,"nodeType":"597","messageId":"598","endLine":135,"endColumn":26},{"ruleId":"531","severity":1,"message":"585","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":16},{"ruleId":"531","severity":1,"message":"587","line":5,"column":21,"nodeType":"533","messageId":"534","endLine":5,"endColumn":37},{"ruleId":"531","severity":1,"message":"629","line":18,"column":8,"nodeType":"533","messageId":"534","endLine":18,"endColumn":13},{"ruleId":"595","severity":1,"message":"596","line":32,"column":14,"nodeType":"597","messageId":"598","endLine":32,"endColumn":16},{"ruleId":"595","severity":1,"message":"596","line":34,"column":10,"nodeType":"597","messageId":"598","endLine":34,"endColumn":12},{"ruleId":"595","severity":1,"message":"596","line":36,"column":10,"nodeType":"597","messageId":"598","endLine":36,"endColumn":12},{"ruleId":"595","severity":1,"message":"596","line":38,"column":10,"nodeType":"597","messageId":"598","endLine":38,"endColumn":12},{"ruleId":"531","severity":1,"message":"630","line":42,"column":7,"nodeType":"533","messageId":"534","endLine":42,"endColumn":19},{"ruleId":"531","severity":1,"message":"599","line":5,"column":38,"nodeType":"533","messageId":"534","endLine":5,"endColumn":43},{"ruleId":"531","severity":1,"message":"600","line":5,"column":44,"nodeType":"533","messageId":"534","endLine":5,"endColumn":53},{"ruleId":"531","severity":1,"message":"602","line":5,"column":62,"nodeType":"533","messageId":"534","endLine":5,"endColumn":72},{"ruleId":"531","severity":1,"message":"604","line":5,"column":92,"nodeType":"533","messageId":"534","endLine":5,"endColumn":98},{"ruleId":"531","severity":1,"message":"631","line":6,"column":8,"nodeType":"533","messageId":"534","endLine":6,"endColumn":17},{"ruleId":"531","severity":1,"message":"611","line":7,"column":25,"nodeType":"533","messageId":"534","endLine":7,"endColumn":37},{"ruleId":"531","severity":1,"message":"613","line":8,"column":8,"nodeType":"533","messageId":"534","endLine":8,"endColumn":21},{"ruleId":"531","severity":1,"message":"614","line":9,"column":8,"nodeType":"533","messageId":"534","endLine":9,"endColumn":21},{"ruleId":"531","severity":1,"message":"615","line":10,"column":8,"nodeType":"533","messageId":"534","endLine":10,"endColumn":25},{"ruleId":"531","severity":1,"message":"616","line":11,"column":8,"nodeType":"533","messageId":"534","endLine":11,"endColumn":19},{"ruleId":"531","severity":1,"message":"632","line":21,"column":7,"nodeType":"533","messageId":"534","endLine":21,"endColumn":18},{"ruleId":"531","severity":1,"message":"633","line":25,"column":9,"nodeType":"533","messageId":"534","endLine":25,"endColumn":13},{"ruleId":"572","severity":1,"message":"634","line":27,"column":8,"nodeType":"574","endLine":27,"endColumn":10,"suggestions":"635"},{"ruleId":"531","severity":1,"message":"636","line":64,"column":13,"nodeType":"533","messageId":"534","endLine":64,"endColumn":20},{"ruleId":"531","severity":1,"message":"594","line":1,"column":38,"nodeType":"533","messageId":"534","endLine":1,"endColumn":44},{"ruleId":"531","severity":1,"message":"569","line":1,"column":131,"nodeType":"533","messageId":"534","endLine":1,"endColumn":141},{"ruleId":"572","severity":1,"message":"637","line":13,"column":3,"nodeType":"574","endLine":13,"endColumn":5,"suggestions":"638"},{"ruleId":"531","severity":1,"message":"624","line":18,"column":21,"nodeType":"533","messageId":"534","endLine":18,"endColumn":32},{"ruleId":"531","severity":1,"message":"592","line":19,"column":11,"nodeType":"533","messageId":"534","endLine":19,"endColumn":14},{"ruleId":"531","severity":1,"message":"639","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":17},{"ruleId":"531","severity":1,"message":"577","line":4,"column":8,"nodeType":"533","messageId":"534","endLine":4,"endColumn":18},{"ruleId":"531","severity":1,"message":"640","line":7,"column":8,"nodeType":"533","messageId":"534","endLine":7,"endColumn":15},{"ruleId":"531","severity":1,"message":"641","line":10,"column":8,"nodeType":"533","messageId":"534","endLine":10,"endColumn":19},{"ruleId":"531","severity":1,"message":"642","line":11,"column":8,"nodeType":"533","messageId":"534","endLine":11,"endColumn":14},{"ruleId":"531","severity":1,"message":"643","line":12,"column":10,"nodeType":"533","messageId":"534","endLine":12,"endColumn":19},{"ruleId":"531","severity":1,"message":"536","line":13,"column":10,"nodeType":"533","messageId":"534","endLine":13,"endColumn":17},{"ruleId":"531","severity":1,"message":"537","line":14,"column":8,"nodeType":"533","messageId":"534","endLine":14,"endColumn":15},{"ruleId":"531","severity":1,"message":"644","line":1,"column":20,"nodeType":"533","messageId":"534","endLine":1,"endColumn":24},{"ruleId":"531","severity":1,"message":"639","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":17},{"ruleId":"531","severity":1,"message":"577","line":4,"column":8,"nodeType":"533","messageId":"534","endLine":4,"endColumn":18},{"ruleId":"531","severity":1,"message":"564","line":2,"column":26,"nodeType":"533","messageId":"534","endLine":2,"endColumn":32},{"ruleId":"531","severity":1,"message":"593","line":2,"column":33,"nodeType":"533","messageId":"534","endLine":2,"endColumn":37},{"ruleId":"531","severity":1,"message":"599","line":2,"column":38,"nodeType":"533","messageId":"534","endLine":2,"endColumn":43},{"ruleId":"531","severity":1,"message":"600","line":2,"column":44,"nodeType":"533","messageId":"534","endLine":2,"endColumn":53},{"ruleId":"531","severity":1,"message":"602","line":2,"column":62,"nodeType":"533","messageId":"534","endLine":2,"endColumn":72},{"ruleId":"531","severity":1,"message":"594","line":2,"column":74,"nodeType":"533","messageId":"534","endLine":2,"endColumn":80},{"ruleId":"531","severity":1,"message":"645","line":2,"column":81,"nodeType":"533","messageId":"534","endLine":2,"endColumn":85},{"ruleId":"531","severity":1,"message":"604","line":2,"column":92,"nodeType":"533","messageId":"534","endLine":2,"endColumn":98},{"ruleId":"531","severity":1,"message":"546","line":2,"column":100,"nodeType":"533","messageId":"534","endLine":2,"endColumn":108},{"ruleId":"531","severity":1,"message":"605","line":2,"column":110,"nodeType":"533","messageId":"534","endLine":2,"endColumn":115},{"ruleId":"531","severity":1,"message":"646","line":3,"column":20,"nodeType":"533","messageId":"534","endLine":3,"endColumn":32},{"ruleId":"531","severity":1,"message":"647","line":5,"column":8,"nodeType":"533","messageId":"534","endLine":5,"endColumn":22},"no-unused-vars","'FilterByCategory' is defined but never used.","Identifier","unusedVar","'Jav' is defined but never used.","'Details' is defined but never used.","'Deatils' is defined but never used.","'example' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Input' is defined but never used.","'Container' is defined but never used.","'Snackbar' is defined but never used.","'Link' is defined but never used.","'HrService' is defined but never used.","'employees' is assigned a value but never used.","'setEmployees' is assigned a value but never used.","'DatePicker' is defined but never used.","'attendance' is assigned a value but never used.","'useState' is defined but never used.","'Delete' is defined but never used.","'handleDeleteClick' is assigned a value but never used.","'CalendarTodayIcon' is defined but never used.","'setAttendancePercentage' is assigned a value but never used.","'handleNotificationClose' is assigned a value but never used.","'CardActions' is defined but never used.","'ViewList' is defined but never used.","'CalendarToday' is defined but never used.","'setFilterText' is assigned a value but never used.","'FilterByStatus' is defined but never used.","'Button' is defined but never used.","'PostJob' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Stack' is defined but never used.","'makeStyles' is defined but never used.","'RadioButtonUncheckedIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'displayAllJobs' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["648"],"'FilterJob' is defined but never used.","'Typography' is defined but never used.","'CardGiftcard' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous function","'employeeId' is assigned a value but never used.","'API_URL_MARKATND' is assigned a value but never used.","'styled' is defined but never used.","'TableBody' is defined but never used.","'tableCellClasses' is defined but never used.","'createData' is defined but never used.","'appliedJob' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'empid'. Either include it or remove the dependency array.",["649"],"'job' is assigned a value but never used.","'Card' is defined but never used.","'Drawer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Paper' is defined but never used.","'InputBase' is defined but never used.","'Divider' is defined but never used.","'IconButton' is defined but never used.","'Box' is defined but never used.","'Dialog' is defined but never used.","'Alert' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'ChairOutlined' is defined but never used.","'ChangeCircle' is defined but never used.","'CurrencyRupeeSharp' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'categoryList' is assigned a value but never used.","'seniorityList' is assigned a value but never used.","'jobType' is assigned a value but never used.","'experience' is assigned a value but never used.","'open' is assigned a value but never used.","'d' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'handleChangeCategory' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'viewByprofileandStatus'. Either include it or remove the dependency array.",["650"],"'empid' is assigned a value but never used.","'changeStatus' is assigned a value but never used.","'SearchJob' is defined but never used.","'randomColor' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAlljobDetails'. Either include it or remove the dependency array.",["651"],"'profile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.index'. Either include it or remove the dependency array.",["652"],"'PropTypes' is defined but never used.","'TabList' is defined but never used.","'AppliedJobs' is defined but never used.","'Status' is defined but never used.","'useParams' is defined but never used.","'Tabs' is defined but never used.","'Grid' is defined but never used.","'ListItemText' is defined but never used.","'ExpandMoreIcon' is defined but never used.",{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},"Update the dependencies array to be: [displayAllJobs, props, selectedFilters]",{"range":"663","text":"664"},"Update the dependencies array to be: [empid]",{"range":"665","text":"666"},"Update the dependencies array to be: [viewByprofileandStatus]",{"range":"667","text":"668"},"Update the dependencies array to be: [getAlljobDetails]",{"range":"669","text":"670"},"Update the dependencies array to be: [props.index]",{"range":"671","text":"672"},[1974,1991],"[displayAllJobs, props, selectedFilters]",[1083,1085],"[empid]",[940,942],"[viewByprofileandStatus]",[1310,1312],"[getAlljobDetails]",[513,515],"[props.index]"]